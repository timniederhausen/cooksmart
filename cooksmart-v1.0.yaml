openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: shopping-list
  description: Shopping list creation
- name: recipe
  description: Recipes
- name: ingredient-proto
  description: Ingredient prototypes
- name: ingredient
  description: Recipe-bound ingredients
paths:
  /api/ingredient/v1/{id}:
    put:
      tags:
      - ingredient
      summary: Update an ingredient
      operationId: updateIngredient
      parameters:
      - name: id
        in: path
        description: ID of the ingredient to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: New ingredient data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      responses:
        "200":
          description: Update succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          description: Invalid ingredient data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
    delete:
      tags:
      - ingredient
      summary: Delete an ingredient
      operationId: deleteIngredient
      parameters:
      - name: id
        in: path
        description: Ingredient to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Delete succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          description: Invalid ingredient ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/ingredient/v1/:
    post:
      tags:
      - ingredient
      summary: Add a new ingredient prototype
      operationId: addIngredient
      requestBody:
        description: Ingredient prototype to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      responses:
        "201":
          description: Add succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ingredient'
        "400":
          description: Invalid ingredient data supplied
  /api/ingredient-proto/v1/{id}:
    get:
      tags:
      - ingredient-proto
      summary: Retrieve an ingredient prototype
      operationId: getIngredient
      parameters:
      - name: id
        in: path
        description: ID of the ingredient to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: The ingredient data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientPrototype'
        "400":
          description: Invalid ingredient ID
    put:
      tags:
      - ingredient-proto
      summary: Update an ingredient prototype
      operationId: updateIngredient_1
      parameters:
      - name: id
        in: path
        description: ID of the ingredient to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: New ingredient data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientPrototype'
        required: true
      responses:
        "200":
          description: Update succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          description: Invalid ingredient data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
    delete:
      tags:
      - ingredient-proto
      summary: Delete an ingredient
      operationId: deleteIngredient_1
      parameters:
      - name: id
        in: path
        description: Ingredient to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Delete succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          description: Invalid ingredient ID
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/ingredient-proto/v1/:
    get:
      tags:
      - ingredient-proto
      summary: Get a list of all ingredient prototypes
      operationId: listIngredients
      parameters:
      - name: query
        in: query
        description: Filter for the recipe name
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: "0"
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: "20"
      - name: sort
        in: query
        description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
        schema:
          type: array
          items:
            type: string
      responses:
        "204":
          description: There are no ingredient prototypes
        "200":
          description: List of all ingredient prototypes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePageIngredientPrototype'
    post:
      tags:
      - ingredient-proto
      summary: Add a new ingredient prototype
      operationId: addIngredient_1
      requestBody:
        description: Ingredient prototype to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientPrototype'
        required: true
      responses:
        "201":
          description: Add succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IngredientPrototype'
        "400":
          description: Invalid ingredient data supplied
  /api/recipe/v1/recipes:
    get:
      tags:
      - recipe
      summary: Get a list of all recipes
      operationId: listRecipes
      parameters:
      - name: query
        in: query
        description: Filter for the recipe name
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: "0"
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: "20"
      - name: sort
        in: query
        description: 'Sorting criteria in the format: property(,asc|desc). Default
          sort order is ascending. Multiple sort criteria are supported.'
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: List of all recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePageRecipe'
        "204":
          description: There are no recipes
    post:
      tags:
      - recipe
      summary: Add a new ingredient prototype
      operationId: addRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        "201":
          description: Add succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        "400":
          description: Invalid ingredient data supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
  /api/recipe/v1/recipe/{id}:
    get:
      tags:
      - recipe
      summary: Retrieve a recipe
      operationId: getRecipe
      parameters:
      - name: id
        in: path
        description: ID of the recipe to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid recipe ID
        "200":
          description: The recipe data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
    put:
      tags:
      - recipe
      summary: Update an existing recipe
      operationId: updateRecipe
      parameters:
      - name: id
        in: path
        description: ID of the recipe to update
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: New recipe data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        "200":
          description: Update succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          description: Invalid recipe data
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
    delete:
      tags:
      - recipe
      summary: Delete an existing recipe
      operationId: deleteRecipe
      parameters:
      - name: id
        in: path
        description: ID of the recipe to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Delete succeeded
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
        "400":
          description: Invalid ingredient data supplied
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/shopping-list/v1/compile_for_recipes:
    get:
      tags:
      - shopping-list
      summary: Compile a ingredient shopping list for a list of recipes
      operationId: compileForRecipes
      parameters:
      - name: recipes
        in: query
        description: Recipes to shop for
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: Ingredient shopping list for given recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
        "400":
          description: Invalid recipe ID supplied
components:
  schemas:
    Unit:
      type: object
    Ingredient:
      required:
      - id
      - quantity
      - unit
      type: object
      properties:
        id:
          type: integer
          format: int64
        prototype:
          $ref: '#/components/schemas/IngredientPrototype'
        quantity:
          type: integer
          format: int32
        unit:
          type: string
        recipe:
          $ref: '#/components/schemas/Recipe'
    IngredientPrototype:
      required:
      - description
      - id
      - image
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        image:
          type: string
    Recipe:
      required:
      - description
      - id
      - image
      - ingredients
      - name
      - rating
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        image:
          type: string
        rating:
          type: integer
          format: int32
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    SimplePageIngredientPrototype:
      required:
      - content
      - first
      - last
      - page
      - pageable
      - size
      - totalElements
      - totalPages
      type: object
      properties:
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/SimplePageable'
        content:
          type: array
          items:
            $ref: '#/components/schemas/IngredientPrototype'
    SimplePageable:
      required:
      - page
      - size
      - sort
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    SimplePageRecipe:
      required:
      - content
      - first
      - last
      - page
      - pageable
      - size
      - totalElements
      - totalPages
      type: object
      properties:
        page:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/SimplePageable'
        content:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
